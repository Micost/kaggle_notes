{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Instroduction\n\nThis note will create dataset for calulation\n","metadata":{}},{"cell_type":"code","source":"from huggingface_hub import login\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\n\nhf_token = user_secrets.get_secret(\"HUGGINGFACE_W\")\n\nlogin(token = hf_token)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-28T14:07:31.645905Z","iopub.execute_input":"2024-10-28T14:07:31.646381Z","iopub.status.idle":"2024-10-28T14:07:31.883564Z","shell.execute_reply.started":"2024-10-28T14:07:31.646311Z","shell.execute_reply":"2024-10-28T14:07:31.882481Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.\nToken is valid (permission: write).\nYour token has been saved to /root/.cache/huggingface/token\nLogin successful\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Generate ramdon numbers for operations","metadata":{}},{"cell_type":"code","source":"import random\n\ndef calculate(op, A, B):\n  if op == '+':\n    return A + B\n  elif op == '-':\n    return A - B\n  elif op == '*':\n    return A * B\n  elif op == '/':\n    if B == 0:\n      return \"Division by zero\"\n    else:\n      return A / B\n  else:\n    return \"Invalid operator\"\n\ndef generate_dataset(num_samples):\n  dataset = []\n  operators = ['+', '-', '*', '/']\n  for _ in range(num_samples):\n    op = random.choice(operators)\n    A = random.randint(1, 100)\n    B = random.randint(1, 100)\n    C = random.randint(2, 10)\n    result = calculate(op, A, B)\n    wrong_result = calculate(op, result,C)\n    prompt = f\"{{'A':{A},'op':'{op}','B':{B}}}\"\n    correct_result = f\"{{'result': '{result}'}}\"\n    wrong_result =  f\"{{'result': '{wrong_result}'}}\"\n    chosen =[]\n    rejected = []\n    content = {\"content\": prompt, \"role\": \"user\"}\n    answer = {\"content\": correct_result,\"role\": \"assistant\"}\n    chosen.append(content)\n    chosen.append(answer)\n    answer = {\"content\": wrong_result,\"role\": \"assistant\"}\n    rejected.append(content)\n    rejected.append(answer)\n    \n    \n    data = {\n        \"prompt\": prompt,\n        \"chosen\": chosen,\n        \"rejected\":rejected\n    }\n    dataset.append(data)\n  return dataset\n\n\ndata = generate_dataset(1000)\n\n\nfor item in data[:5]:\n  print(item)","metadata":{"execution":{"iopub.status.busy":"2024-10-28T14:07:31.885324Z","iopub.execute_input":"2024-10-28T14:07:31.885663Z","iopub.status.idle":"2024-10-28T14:07:31.906367Z","shell.execute_reply.started":"2024-10-28T14:07:31.885623Z","shell.execute_reply":"2024-10-28T14:07:31.905290Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"{'prompt': \"{'A':33,'op':'-','B':25}\", 'chosen': [{'content': \"{'A':33,'op':'-','B':25}\", 'role': 'user'}, {'content': \"{'result': '8'}\", 'role': 'assistant'}], 'rejected': [{'content': \"{'A':33,'op':'-','B':25}\", 'role': 'user'}, {'content': \"{'result': '1'}\", 'role': 'assistant'}]}\n{'prompt': \"{'A':92,'op':'-','B':92}\", 'chosen': [{'content': \"{'A':92,'op':'-','B':92}\", 'role': 'user'}, {'content': \"{'result': '0'}\", 'role': 'assistant'}], 'rejected': [{'content': \"{'A':92,'op':'-','B':92}\", 'role': 'user'}, {'content': \"{'result': '-10'}\", 'role': 'assistant'}]}\n{'prompt': \"{'A':71,'op':'-','B':9}\", 'chosen': [{'content': \"{'A':71,'op':'-','B':9}\", 'role': 'user'}, {'content': \"{'result': '62'}\", 'role': 'assistant'}], 'rejected': [{'content': \"{'A':71,'op':'-','B':9}\", 'role': 'user'}, {'content': \"{'result': '59'}\", 'role': 'assistant'}]}\n{'prompt': \"{'A':13,'op':'+','B':49}\", 'chosen': [{'content': \"{'A':13,'op':'+','B':49}\", 'role': 'user'}, {'content': \"{'result': '62'}\", 'role': 'assistant'}], 'rejected': [{'content': \"{'A':13,'op':'+','B':49}\", 'role': 'user'}, {'content': \"{'result': '68'}\", 'role': 'assistant'}]}\n{'prompt': \"{'A':84,'op':'/','B':68}\", 'chosen': [{'content': \"{'A':84,'op':'/','B':68}\", 'role': 'user'}, {'content': \"{'result': '1.2352941176470589'}\", 'role': 'assistant'}], 'rejected': [{'content': \"{'A':84,'op':'/','B':68}\", 'role': 'user'}, {'content': \"{'result': '0.2058823529411765'}\", 'role': 'assistant'}]}\n","output_type":"stream"}]},{"cell_type":"code","source":"from datasets import Dataset\n\ndataset = Dataset.from_list(data)","metadata":{"execution":{"iopub.status.busy":"2024-10-28T14:07:31.908118Z","iopub.execute_input":"2024-10-28T14:07:31.908627Z","iopub.status.idle":"2024-10-28T14:07:31.947552Z","shell.execute_reply.started":"2024-10-28T14:07:31.908579Z","shell.execute_reply":"2024-10-28T14:07:31.946291Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":"# Push to huggingface","metadata":{}},{"cell_type":"code","source":"from datasets import load_dataset\n\n\ndataset.push_to_hub(\"micost/simple_calculation_orpo\")","metadata":{"execution":{"iopub.status.busy":"2024-10-28T14:07:31.951858Z","iopub.execute_input":"2024-10-28T14:07:31.952331Z","iopub.status.idle":"2024-10-28T14:07:33.283695Z","shell.execute_reply.started":"2024-10-28T14:07:31.952283Z","shell.execute_reply":"2024-10-28T14:07:33.282680Z"},"trusted":true},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":"Uploading the dataset shards:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"449f79d54c62404ca020086e61166665"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Creating parquet from Arrow format:   0%|          | 0/1 [00:00<?, ?ba/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"14fcbc93f6ca439d8292e8a0a6064e93"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/350 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3cdbf7fc54214af6b98db48bdf6444a7"}},"metadata":{}},{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"CommitInfo(commit_url='https://huggingface.co/datasets/micost/simple_calculation_orpo/commit/41aedf3d9a727a41239b63453d130d26e88bbcfc', commit_message='Upload dataset', commit_description='', oid='41aedf3d9a727a41239b63453d130d26e88bbcfc', pr_url=None, repo_url=RepoUrl('https://huggingface.co/datasets/micost/simple_calculation_orpo', endpoint='https://huggingface.co', repo_type='dataset', repo_id='micost/simple_calculation_orpo'), pr_revision=None, pr_num=None)"},"metadata":{}}]}]}